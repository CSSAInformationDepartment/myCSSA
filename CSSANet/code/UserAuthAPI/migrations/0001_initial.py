# Generated by Django 2.1.3 on 2018-12-26 00:11

import UserAuthAPI.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CSSACommitteProfile',
            fields=[
                ('Id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=False)),
                ('CommenceDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CSSADept',
            fields=[
                ('deptId', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('deptName', models.CharField(max_length=50, verbose_name='部门简称')),
                ('deptTitle', models.CharField(max_length=50, verbose_name='部门名称')),
                ('deptTitleEN', models.CharField(max_length=50, verbose_name='Name of the Department')),
            ],
        ),
        migrations.CreateModel(
            name='CSSARole',
            fields=[
                ('roleId', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('roleFlag', models.CharField(max_length=3)),
                ('roleName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UniMajor',
            fields=[
                ('uniMajorId', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('majorName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserAcademic',
            fields=[
                ('academicRecId', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('timeOfCreate', models.DateTimeField(auto_now_add=True)),
                ('degree', models.CharField(choices=[('CR', 'Certificate'), ('DP', 'Diploma'), ('FN', 'Foundation'), ('BA', 'Bachelor'), ('MA', 'Master'), ('JD', 'Jurum Doctor'), ('MD', 'Medical Doctor'), ('PhD', 'Doctor of Philosophy')], default='BA', max_length=32, verbose_name='学位')),
                ('uniMajor', models.ForeignKey(on_delete=models.DO_NOTHING, to='UserAuthAPI.UniMajor', verbose_name='专业')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=100, unique=True, verbose_name='电子邮箱')),
                ('telNumber', models.CharField(default='0400000000', max_length=16, verbose_name='联系电话')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', UserAuthAPI.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=UserAuthAPI.models._GetUserDir, verbose_name='头像')),
                ('infocardBg', models.ImageField(blank=True, null=True, upload_to=UserAuthAPI.models._GetUserDir, verbose_name='名片背景')),
                ('identiyConfirmed', models.BooleanField(default=False, verbose_name='会员身份状态')),
                ('isValid', models.BooleanField(default=False, verbose_name='账号有效性')),
                ('firstNameEN', models.CharField(max_length=50, verbose_name='英文名')),
                ('lastNameEN', models.CharField(max_length=50, verbose_name='英文姓')),
                ('firstNameCN', models.CharField(blank=True, max_length=50, null=True, verbose_name='中文名')),
                ('lastNameCN', models.CharField(blank=True, max_length=50, null=True, verbose_name='中文姓')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Other', max_length=50)),
                ('dateOfBirth', models.DateField(null=True, verbose_name='生日')),
                ('joinDate', models.DateTimeField(auto_now_add=True)),
                ('studentId', models.CharField(max_length=10, verbose_name='学生证号')),
                ('membershipId', models.CharField(blank=True, max_length=10, null=True, verbose_name='会员卡号')),
                ('address', models.CharField(max_length=150, null=True, verbose_name='地址')),
                ('postcode', models.CharField(max_length=4, null=True, verbose_name='邮编')),
                ('originate', models.CharField(max_length=20, null=True, verbose_name='籍贯')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='useracademic',
            name='userProfile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cssacommitteprofile',
            name='Department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='UserAuthAPI.CSSADept'),
        ),
        migrations.AddField(
            model_name='cssacommitteprofile',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
